<html>

<head>
    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
    <link rel="stylesheet" href="/styles.css" />
    <link rel="stylesheet" href="/home.css" />
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;300;400;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="shortcut icon" type="image/x-icon" href="/favicon.ico" />
    <link rel="icon" href="/favicon.ico" type="image/x-icon">
</head>

<body onload="myFunction()">
    {{{body}}}

    <div>
        <div class="chart-wrapper" style="width:33%">
            <div id="chart1" class="box"></div>
            <p style="margin-left: 20px; margin-right:20px">This diagram shows the daily cases over a period of time input by users. Users will be able to toggle their view in terms of daily or monthly.  We can identify the trend of the virus such as a sharp increase, steady decrease or constant.</p>
        </div>

        <div class="chart-wrapper" style="width:34%">
            <div id="chart2" class="box"></div>
            <p style="margin-left: 20px; margin-right:20px">The daily active cases constitute those still hospitalised and in isolation. Having a greater number in isolation compared to those still hospitalised is a good sign as it shows that the majority of active cases are in a stable health state which is easier to recover.</p>
        </div>


        <div class="chart-wrapper" style="width:33%">
            <div id="chart3" class="box"></div>
            <p style="margin-left: 20px; margin-right:20px">Daily recovered vs daily cases. If ‘daily recovered’ is constantly more than daily cases, and the recovery rate is high, we can infer that Singapore might enter phase 3 soon as the number of active cases would be in the safe zone.</p>
        </div>
    </div>

    <select name="monthly" id="monthly" class="dd">
        <option value="0">Select Month filter</option>
        <option value="6">June</option>
        <option value="7">July</option>
        <option value="8">August</option>
        <option value="9">September</option>
        <option value="10">October</option>
    </select>

    <div style="width:100%">
        <button onclick="monthlyData()" class="monthlybutton_color">View monthly data</button></br>
        <button onclick="monthlySumData()" class="sumbutton_color">View month summation data</button>
        <button onclick="dailyData()" class="dailybutton_color">View daily data</button>
    </div>


    <div class="chart-wrapper" style="width:100%; margin-bottom:20px">
        <div id="chart4" class="box"></div>
        <p>Users are able to build their own chart to view and analyze the different statistic of charts. There are different column for user to choose from, this way users are able to analyse the different data base on what they need. </p>
    </div>

    <h2>Key highlights from phrase 2</h2>


    <div class="stats1">
        <p class="summaryheader center" id="myText" style="font-size: 30px;"></p>
        <p class="center">Recovery Rate</p>
    </div>
    <div class="stats1">
        <p class="summaryheader center" id="activecase" style="font-size: 30px"></p>
        <p class="center">Active Cases</p>
    </div>

    <div class="stats1">
        <p class="summaryheader center" id="recovered" style="font-size: 30px"></p>
        <p class="center">Recovered Cases</p>
    </div>
    <br />
    <br />
    <br />
    <br />
    <br />
    <button class="button button5">Show analyze result</button>



    <!--<div class="customchart">
        <p>Filter/Build your own chart (this is not working yet, will it ever be coded idk)</p>
        <select name="chartfilter" id="chartfilter" multiple>

        </select>

        <div id="chartcustom" class="box"></div>
    </div> -->

</body>

<script>
    function myFunction() {
        var number = getreoverRate + "%"
        document.getElementById("myText").innerHTML = number
        var activecase = getactivecases
        document.getElementById("activecase").innerHTML = activecase
        var recoveredcases = getrecoveredcases
        document.getElementById("recovered").innerHTML = recoveredcases
    }

    function monthlyData() {
        var sel = document.getElementById("monthly").value
        if (sel == '0') {
            alert('Please choose a valid month')
            return
        }
        chart1.updateSeries([{
            name: 'Daily Cases',
            data: seriesDataAmonth[sel - 6].tempMonthA
        }])

        chart2.updateSeries([{
            name: 'Active',
            data: seriesDataBmonth[sel - 6].tempMonthB,
        }, {
            name: 'Isolation',
            data: seriesDataB2month[sel - 6].tempMonthB2
        }])

        chart3.updateSeries([{
            name: 'Daily Cases3',
            data: seriesDataCmonth[sel - 6].tempMonthC
        }])
    }

    function monthlySumData() {
        chart1.updateSeries([{
            name: 'Daily Cases',
            data: seriesDataAsum
        }])

        chart2.updateSeries([{
            name: 'Active',
            data: seriesDataBsum,
        }, {
            name: 'Isolation',
            data: seriesDataB2sum
        }])

        chart3.updateSeries([{
            name: 'Daily Cases3',
            data: seriesDataCsum
        }])
    }

    function dailyData() {
        chart1.updateSeries([{
            name: 'Daily Cases',
            data: seriesDataA
        }])

        chart2.updateSeries([{
            name: 'Active',
            data: seriesDataB,
        }, {
            name: 'Isolation',
            data: seriesDataB2
        }])

        chart3.updateSeries([{
            name: 'Daily Cases3',
            data: seriesDataC
        }])
    }

    var testjson = {{{ chartData }}}
    //var testjson = JSON.parse({{{ json chartData }}});
    console.log(testjson);

    seriesDataA = []
    seriesDataAmonth = []
    seriesDataAsum = []

    seriesDataB = []
    seriesDataBsum = []
    seriesDataBmonth = []

    seriesDataB2 = []
    seriesDataB2sum = []
    seriesDataB2month = []

    seriesDataC = []
    seriesDataCsum = []
    seriesDataCmonth = []

    filters = testjson['searchables']

    seriesA = JSON.parse(testjson['a'])
    seriesB = JSON.parse(testjson['b'])
    seriesC = JSON.parse(testjson['c'])
    getreoverRate = JSON.parse(testjson['d'])
    getactivecases = JSON.parse(testjson['e'])
    getrecoveredcases = JSON.parse(testjson['f'])
    console.log("helollllllllllllllllllllllllll", JSON.parse(testjson['e']))

    seriesASum = testjson['summontha']
    seriesBSum = testjson['summonthb']
    seriesCSum = testjson['summonthc']

    seriesAll = JSON.parse(testjson['fullchart'])

    for (var json in seriesA) { // this is test bar chart
        seriesDataA.push({ x: seriesA[json].x, y: seriesA[json].y })
    }

    for (var i = 6; i < 11; i++) {
        seriesDataAsum.push({ x: i, y: seriesASum[i] })
        seriesDataBsum.push({ x: i, y: seriesBSum[i] })
        seriesDataB2sum.push({ x: i, y: seriesBSum[i * 10] })
        seriesDataCsum.push({ x: i, y: seriesCSum[i] })

        parsedMonthA = JSON.parse(testjson['sortmontha'][i])
        tempMonthA = []
        for (var json in parsedMonthA) {
            tempMonthA.push({ x: parsedMonthA[json].x, y: parsedMonthA[json].y })
        }
        seriesDataAmonth.push({ tempMonthA })

        parsedMonthB = JSON.parse(testjson['sortmonthb'][i])
        tempMonthB = []
        for (var json in parsedMonthB) {
            tempMonthB.push({ x: parsedMonthB[json].x, y: parsedMonthB[json].y })
        }
        seriesDataBmonth.push({ tempMonthB })
        parsedMonthB2 = JSON.parse(testjson['sortmonthb'][i])
        tempMonthB2 = []
        for (var json in parsedMonthB2) {
            tempMonthB2.push({ x: parsedMonthB2[json].x, y: parsedMonthB2[json].z })
        }
        seriesDataB2month.push({ tempMonthB2 })

        parsedMonthC = JSON.parse(testjson['sortmonthc'][i])
        tempMonthC = []
        for (var json in parsedMonthC) {
            tempMonthC.push({ x: parsedMonthC[json].x, y: parsedMonthC[json].y })
        }
        seriesDataCmonth.push({ tempMonthC })
    }

    for (var json in seriesB) {
        seriesDataB.push({ x: seriesB[json].x, y: seriesB[json].y })
        seriesDataB2.push({ x: seriesB[json].x, y: seriesB[json].z })
    }

    for (var json in seriesC) {
        seriesDataC.push({ x: seriesC[json].x, y: seriesC[json].y })
    }

    tempFilterb = []
    tempFilterc = []
    tempFilterd = []
    tempFiltere = []
    tempFilterf = []
    tempFilterg = []
    for (var json in seriesAll) {
        tempFilterb.push({ x: seriesAll[json].a, y: seriesAll[json].b })
        tempFilterc.push({ x: seriesAll[json].a, y: seriesAll[json].c })
        tempFilterd.push({ x: seriesAll[json].a, y: seriesAll[json].d })
        tempFiltere.push({ x: seriesAll[json].a, y: seriesAll[json].e })
        tempFilterf.push({ x: seriesAll[json].a, y: seriesAll[json].f })
        tempFilterg.push({ x: seriesAll[json].a, y: seriesAll[json].g })
    }


    var options1 = {
        chart: {
            height: 350,
            type: 'line',
            foreColor: '#FFFFFF'

        },
        dataLabels: {
            enabled: false
        },
        series: [],
        title: {
            text: 'Monthly Cases',
        },
        noData: {
            text: 'Loading...'
        },
        xaxis: {
            tickAmount: 4
        }
    }

    var options2 = {
        chart: {
            height: 350,
            type: 'bar',
            stacked: true,
            foreColor: '#FFFFFF'

        },
        dataLabels: {
            enabled: false
        },
        series: [],
        title: {
            text: 'Active Cases',
        },
        noData: {
            text: 'Loading...'
        },
        xaxis: {
            tickAmount: 4,
            labels: {
                formatter: function (value) {
                    switch (value) {
                        case 1:
                            return "Jun"
                        case 1.75:
                            return "Jul"
                        case 2.5:
                            return "Aug"
                        case 3.25:
                            return "Sep"
                        case 4:
                            return "Oct"
                    }
                    return value;
                }
            }
        }
    }

    var options3 = {
        chart: {
            height: 350,
            type: 'bar',
            foreColor: '#FFFFFF'

        },
        dataLabels: {
            enabled: false
        },
        series: [],
        title: {
            text: 'Daily Recovered',
        },
        noData: {
            text: 'Loading...'
        },
        xaxis: {
            tickAmount: 4,
            labels: {
                formatter: function (value) {
                    switch (value) {
                        case 1:
                            return "Jun"
                        case 1.75:
                            return "Jul"
                        case 2.5:
                            return "Aug"
                        case 3.25:
                            return "Sep"
                        case 4:
                            return "Oct"
                    }
                    return value;
                }
            }
        }
    }

    var options4 = {
        chart: {
            height: 350,
            type: 'bar',
            foreColor: '#FFFFFF'

        },
        dataLabels: {
            enabled: false
        },
        series: [],
        title: {
            text: 'Build your own chart',
        },
        noData: {
            text: 'Loading...'
        },
        xaxis: {
            tickAmount: 4,
        }
    }

    var chart1 = new ApexCharts(
        document.querySelector("#chart1"),
        options1
    );

    var chart2 = new ApexCharts(
        document.querySelector("#chart2"),
        options2
    );

    var chart3 = new ApexCharts(
        document.querySelector("#chart3"),
        options3
    );

    var chart4 = new ApexCharts(
        document.querySelector("#chart4"),
        options4
    );

    chart1.render()
    chart2.render()
    chart3.render()
    chart4.render()

    chart1.updateSeries([{
        name: 'Daily Cases',
        data: seriesDataA
    }])

    chart2.updateSeries([{
        name: 'Active',
        data: seriesDataB,
    }, {
        name: 'Isolation',
        data: seriesDataB2
    }])

    chart3.updateSeries([{
        name: 'Daily Cases3',
        data: seriesDataC
    }])

    chart4.updateSeries([{
        name: 'Daily Confirmed',
        data: tempFilterb,
    }, {
        name: 'Cumulative Confirmed',
        data: tempFilterc
    },
    {
        name: 'Daily Discharged',
        data: tempFilterd
    },
    {
        name: 'Still Hospitalised',
        data: tempFiltere
    },
    {
        name: 'In Isolation MOH report',
        data: tempFilterf
    },
    {
        name: 'Total Completed Isolation MOH report',
        data: tempFilterg
    },
    ])

    var selectBox = document.getElementById('chartfilter');

    for (var i = 0, l = filters.length; i < l; i++) {
        var option = filters[i];
        selectBox.options.add(new Option(filters[i], filters[i]));
    }

</script>

</html>